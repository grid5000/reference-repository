---
stages:
  - lint
  - test
  - validate
  - generate
  - deploy
  # 'post_validate' is after 'deploy' to avoid blocking on this when updating the ref-repo
  - post_validate

include:
  - project: 'grid5000/grid5000-gitlab-templates'
    ref: master
    file:
      # Execute sonarqube
      - '/sonarqube.yml'
      # Execute rubocop
      - '/rubocop-rails.yml'
      # Import g5k default stages
      - '/g5k-default-stages.yml'

rspec:
  stage: test
  extends: .test-for-bullseye
  script:
    - export TZ=Europe/Paris
    - bundle exec rspec

validate-data:
  extends: .test-for-bullseye
  stage: validate
  parallel:
    matrix:
      - SITE: [grenoble, lille, luxembourg, lyon, nancy, nantes, rennes, sophia]
  script:
    - echo 'Doing input validation ...'
    - bundle exec rake valid:schema SITE=${SITE}
    - echo 'Checking configuration duplicates...'
    - bundle exec rake valid:duplicates SITE=${SITE}
    - echo 'Doing check of network description ...'
    - bundle exec rake valid:network SITE=${SITE}

generate-reference-api:
  extends: .test-for-bullseye
  stage: generate
  script:
    - export TZ=Europe/Paris
    - bundle exec rake reference-api
    - echo "Checking that git status output is empty..."
    - git status -s
    - git diff --exit-code

run-puppet-generator:
  extends: .test-for-bullseye
  stage: generate
  needs: ['generate-reference-api']
  parallel:
    matrix:
      - SITE: [grenoble, lille, luxembourg, lyon, nancy, nantes, rennes, sophia]
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.inria.fr/grid5000/grid5000-puppet.git
    - cd grid5000-puppet/platforms
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.inria.fr/grid5000/g5k-platform-production.git production
    - cd ../..
    - bundle exec rake gen:puppet:all SITE=${SITE} OUTPUTDIR=../grid5000-puppet
    - cd grid5000-puppet
    - echo "Checking that grid5000-puppet is unchanged..."
    - git status -s
    - git diff --exit-code
    - echo "Checking that g5k-platform-production is unchanged..."
    - cd platforms/production
    - git status -s
    - git diff --exit-code
  only:
    refs:
      - master

run-wiki-generator:
  extends: .test-for-bullseye
  stage: generate
  needs: ['generate-reference-api']
  parallel:
    matrix:
      - GENERATOR: [cpu_parameters, disk_reservation, environments, group_storage, hardware, kwollect_metrics, oar_properties, status]
        SITE: global
      - GENERATOR: [site_hardware, site_network]
        SITE: [grenoble, lille, luxembourg, lyon, nancy, nantes, rennes, sophia]
  script:
    - echo "$GRID5000_API" > "${HOME}/.grid5000_api.yml"
    - bundle exec rake gen:wiki NAME=${GENERATOR} SITE=${SITE} DO=diff
  only:
    refs:
      - master

run-oar-properties-generator:
  extends: .test-for-bullseye
  stage: generate
  needs: ['generate-reference-api']
  parallel:
    matrix:
      - SITE: [grenoble, lille, luxembourg, lyon, nancy, nantes, rennes, sophia]
  script:
    - bundle exec rake gen:oar-properties SITE=${SITE} DO=diff VERBOSE=2
    - bundle exec rake valid:oar-properties SITE=#{SITE} VERBOSE=1


deploy:
  stage: deploy
  tags:
    - grid5000-shell
  script:
    - /srv/ci-runner-scripts/bin/update-api-servers

validate-data:
  extends: .test-for-bullseye
  stage: post_validate
  parallel:
    matrix:
      - SITE: [grenoble, lille, luxembourg, lyon, nancy, nantes, rennes, sophia]
  script:
    - echo "Checking cluster homogeneity..."
    - bundle exec rake valid:homogeneity SITE=${SITE} VERBOSE=1
