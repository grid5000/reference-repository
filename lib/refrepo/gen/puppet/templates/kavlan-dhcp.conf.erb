# MANAGED BY PUPPET
# Module : kavlang5k
# GENERATED by kavlang5k.rb

<% if dhcpkind == 'dhcpd'-%>
ddns-update-style none;
option space pxelinux;
option pxelinux.magic      code 208 = string;
option pxelinux.configfile code 209 = text;
option pxelinux.pathprefix code 210 = text;
option pxelinux.reboottime code 211 = unsigned integer 32;
option vendorinfo          code 43  = string;

# define Option for the PXE class
option space PXE;
option PXE.mtftp-ip code 1 = ip-address;
option PXE.mtftp-cport code 2 = unsigned integer 16;
option PXE.mtftp-sport code 3 = unsigned integer 16;
option PXE.mtftp-tmout code 4 = unsigned integer 8;
option PXE.mtftp-delay code 5 = unsigned integer 8;
option PXE.discovery-control code 6 = unsigned integer 8;
option PXE.discovery-mcast-addr code 7 = ip-address;
option arch code 93 = unsigned integer 16;

# create the Class PXE
class "PXE" {
    # if the vendor-class-identifier is set to PXEClient in the client dhcp request
    match if substring(option vendor-class-identifier, 0, 9) = "PXEClient";
    #
    # filename define the file retrieve by the client, there pxelinux.0
    # our tftp is chrooted so is just the path to the file
    # If you prefer use grub, use pxegrub compiled for your ethernet card.
    if option arch = 00:07 {
        filename "/grub/x86_64-efi/core.efi";
    } else if option arch = 00:09 {
        filename "/grub/x86_64-efi/core.efi";
    } else if option arch = 00:0b {
        filename "/grub/arm64-efi/core.efi";
    } else {
        filename "/pxelinux.0";
        #
        # Set the  vendor-class-identifier field to PXEClient in dhcp answer
        # if this field is not set the pxe client will ignore the answer !
        #
        option vendor-class-identifier "PXEClient";
        vendor-option-space PXE;
        option PXE.mtftp-ip 0.0.0.0;
    }
}

<%
kavlan = refapi['sites'][site_uid]['kavlans'][kavlan_id.to_s] # TODO fix needed conversion
kavlan_ip = IPAddress::IPv4::new(kavlan['network'])
-%>

<% end -%>
<% kavlan = refapi['sites'][site_uid]['kavlans'][kavlan_id.to_s] # TODO fix needed conversion
   if dhcpkind == 'dhcpd'
     kavlan_ip = IPAddress::IPv4::new(kavlan['network']) -%>
subnet <%= kavlan_ip.network %> netmask <%= kavlan_ip.netmask %> {
<% elsif dhcpkind == 'dhcpd6'
     case kavlan_id
     when 1..3 # local non routed vlan
       kavlan6_net = kavlan_id + 0x80 - 1
     when 4..9 # local routed vlan
       kavlan6_net = kavlan_id + 0x90 - 4
     else      # global vlan
       kavlan6_net = kavlan_id + 0xa0 - 10
     end
     refapi['sites'][site_uid]
     kavlan6_ip = "#{refapi['sites'][site_uid]['ipv6']['prefix']}#{sprintf('%02x', kavlan6_net)}::/64" -%>
subnet6 <%= kavlan6_ip %> {
<% end -%>
    default-lease-time 86400;
    max-lease-time 604800;
    option domain-name-servers <%= kavlan_id.to_i.between?(1, 3)? kavlan['gateway'] : "dns.#{site_uid}.grid5000.fr" %>;
    option ntp-servers <%= kavlan_id.to_i.between?(1, 3)? kavlan['gateway'] : "ntp.#{site_uid}.grid5000.fr" %>;
    option routers <%= kavlan['gateway'] %>;
<% if dhcpkind == 'dhcpd' -%>
    option subnet-mask <%= kavlan_ip.netmask %>;
    option broadcast-address <%= kavlan_ip.broadcast %>;
    next-server <%= "kadeploy.#{site_uid}.grid5000.fr" %>;
<% end -%>
}

<%
refapi['sites'].sort.to_h.each_key do |site|
  next if kavlan_id.to_i.between?(1, 9) and site != site_uid
  refapi['sites'][site].fetch('clusters', []).sort.to_h.each do |cluster_uid, cluster|
    cluster['nodes'].sort.to_h.each do |node_uid, node|
      next if node['status'] and node['status'] == 'retired'
      node['network_adapters'].each do |interface|
          if interface['mountable'] and
             interface['kavlan']

             if not interface['mac'] or
                not node['kavlan'][interface['device']]["kavlan-#{kavlan_id}"]
                  warn "WARN: Cannot fill dhcpd entry for #{node_uid}, interface #{interface_uid} in vlan #{kavlan_id}: " \
              "Missing mac (#{interface['mac']}) or IP (#{node['kavlan'][interface['device']] and node['kavlan'][interface['device']]["kavlan-#{kavlan_id}"]})"
                  next
             end

             if dhcpkind == 'dhcpd'
-%>
host <%= node_uid %><%= interface['mounted']? "" : "-"+interface['device'] %>-kavlan-<%= kavlan_id %>.<%= site %>.grid5000.fr {
  hardware ethernet <%= interface['mac'].downcase() %>;
  option host-name "<%= node_uid %><%= interface['mounted']? "" : "-"+interface['device'] %>-kavlan-<%= kavlan_id %>";
  option domain-name "<%= site %>.grid5000.fr";
  option domain-search "<%= site %>.grid5000.fr", "grid5000.fr";
  fixed-address <%= node['kavlan'][interface['device']]["kavlan-#{kavlan_id}"] %>;
<%     if kavlan_id.to_i > 9 -%>
  next-server kadeploy.<%= site %>.grid5000.fr;
<%     end -%>
}
<%
             elsif dhcpkind == 'dhcpd6'
-%>
host <%= node_uid %><%= interface['mounted']? "" : "-"+interface['device'] %>-kavlan-<%= kavlan_id %>-ipv6.<%= site %>.grid5000.fr {
  hardware ethernet <%= interface['mac'].downcase() %>;
  option host-name "<%= node_uid %><%= interface['mounted']? "" : "-"+interface['device'] %>-kavlan-<%= kavlan_id %>-ipv6";
  option domain-name "<%= site %>.grid5000.fr";
  option domain-search "<%= site %>.grid5000.fr", "grid5000.fr";
  fixed-address6 <%= node['kavlan6'][interface['device']]["kavlan-#{kavlan_id}"] %>;
}
<%
             end
        end
      end
    end
  end
end
-%>
