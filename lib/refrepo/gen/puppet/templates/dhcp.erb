#
# This file was generated from reference-repository.git
# Do not edit this file by hand. Your changes will be overwritten.
#
<%
  site_uid = data.fetch('site_uid')

  data.fetch('network_adapters').each { |network_interface|
    dhcp_entries = []

    data.fetch('nodes').each_sort_by_node_uid { |node_uid, node|
      next if node == nil || (node['status'] && node['status'] == 'retired')

      # Get ipv4, ipv6 and mac addresses
      begin
        ifinfos = get_network_info(node, network_interface)
        ifinfos.each do |h|
          case network_interface
            when 'bmc', 'adm', 'mic0'
              uid_net = node_uid + '-' + network_interface
            else
              uid_net = h['name']
          end

          if dhcpkind == 'dhcpv6'
            if h['ip6']
              dhcp_entries.push({ 'uid_net' => uid_net, 'ipv6' => h['ip6'], 'mac' => h['mac'] })
            end
          else
            if h['ip']
              dhcp_entries.push({ 'uid_net' => uid_net, 'ipv4' => h['ip'], 'mac' => h['mac'] })
            end
          end
        end
      rescue => e
        next if data.fetch('optional_network_adapters').include?(network_interface)

        # Hash.fetch(key) raise KeyError if the hash[key] does not exist.
        puts "Warning: #{site_uid} - #{node_uid}: #{e}. Skip the DHCP entry of the #{network_interface} interface." # (error in #{__method__})
        next
      end

    }
    if not dhcp_entries.empty?
%>
group {
<% dhcp_entries.each {|node| %>
  host <%= node['uid_net'] %> {
    hardware ethernet       <%= node['mac'].upcase %>;
<% if dhcpkind == 'dhcpv6' -%>
    fixed-address6          <%= node['ipv6'] %>;
<% else -%>
    fixed-address           <%= node['ipv4'] %>;
<% end -%>
<% if node['uid_net'] =~ /^(troll)-\d+$/ -%>
    filename                "/pxelinux.0";
<% end -%>
  }
<%    } %>
}
<% end %>
<% } %>
