<%
  # File generated by 'rake mass:create SRC=clervaux.csv
  # If changes are needed, it might be better to edit the source data and regenerate using 'rake mass:create'
 
  cluster_name = "clervaux"
  nodes_number = 48 # Size of the cluster (number of nodes)
  # MAC addresses declaration
  mac_eth0_list = %w(
7C:D3:0A:C1:79:66
7C:D3:0A:C1:7B:8E
7C:D3:0A:C1:99:D0
7C:D3:0A:C1:72:EE
7C:D3:0A:C1:7D:1A
7C:D3:0A:C1:7E:2E
7C:D3:0A:C1:79:2A
7C:D3:0A:C1:7E:A0
7C:D3:0A:C1:9B:08 
7C:D3:0A:C1:7E:82
7C:D3:0A:C1:81:EE
7C:D3:0A:C1:87:7C
7C:D3:0A:C1:98:44
7C:D3:0A:C1:83:86
7C:D3:0A:C1:8E:0C
7C:D3:0A:C1:99:0A
7C:D3:0A:C1:73:D8
7C:D3:0A:C1:7E:C4
7C:D3:0A:C1:81:0A
7C:D3:0A:C1:92:20
7C:D3:0A:C1:59:50
7C:D3:0A:C1:7B:88
7C:D3:0A:C1:5B:96
7C:D3:0A:C1:70:54
7C:D3:0A:C1:6F:F4
00:8C:FA:F7:14:E0
7C:D3:0A:C1:91:00
7C:D3:0A:C1:91:5A
7C:D3:0A:C1:8B:E4
7C:D3:0A:C1:93:B2
7C:D3:0A:C1:93:C4
7C:D3:0A:C1:8D:AC
7C:D3:0A:C1:7C:36
7C:D3:0A:C1:81:CA
7C:D3:0A:C1:94:78
7C:D3:0A:C1:8F:68
7C:D3:0A:C1:5D:0A
7C:D3:0A:C1:5A:1C
7C:D3:0A:C1:7F:54
7C:D3:0A:C1:5C:3E
7C:D3:0A:C7:6E:7E
7C:D3:0A:C1:5E:72
7C:D3:0A:C1:5E:9C
7C:D3:0A:C1:7E:E8
7C:D3:0A:C1:75:A6
7C:D3:0A:BA:6D:C0
7C:D3:0A:C1:76:54
7C:D3:0A:C1:7F:F6
  )
  mac_bmc_list = %w(
7c:d3:0a:c1:7e:ec
7c:d3:0a:c1:75:aa
7c:d3:0a:ba:6d:c4
7c:d3:0a:c1:76:58
7c:d3:0a:c1:79:6a
7c:d3:0a:c1:87:80
7c:d3:0a:c1:5b:9a
7c:d3:0a:c1:81:ce
7c:d3:0a:c1:83:8a
7c:d3:0a:c1:8e:10
7c:d3:0a:c1:99:0e
7c:d3:0a:c1:73:dc
7c:d3:0a:c1:9b:0c
7c:d3:0a:c1:7e:86
7c:d3:0a:c1:81:f2
7c:d3:0a:c1:98:48
7c:d3:0a:c1:7d:1e
7c:d3:0a:c1:7e:32
7c:d3:0a:c1:79:2e
7c:d3:0a:c1:7e:a4
7c:d3:0a:c1:7f:fa
7c:d3:0a:c1:7b:92
7c:d3:0a:c1:99:d4
7c:d3:0a:c1:72:f2
7c:d3:0a:c1:91:04
7c:d3:0a:c1:91:5e
7c:d3:0a:c1:8b:e8
7c:d3:0a:c1:93:b6
7c:d3:0a:c1:7b:8c
7c:d3:0a:c1:70:58
7c:d3:0a:c1:6f:f8
00:8c:fa:f7:14:e4
7c:d3:0a:c1:7e:c8
7c:d3:0a:c1:81:0e
7c:d3:0a:c1:92:24
7c:d3:0a:c1:59:54
7c:d3:0a:c1:5c:42
7c:d3:0a:c7:6e:82
7c:d3:0a:c1:5e:76
7c:d3:0a:c1:5e:a0
7c:d3:0a:c1:8f:6c
7c:d3:0a:c1:5d:0e
7c:d3:0a:c1:5a:20
7c:d3:0a:c1:7f:58
7c:d3:0a:c1:93:c8
7c:d3:0a:c1:8d:b0
7c:d3:0a:c1:7c:3a
7c:d3:0a:c1:94:7c
  )
%>
---
nodes:
<% (1..nodes_number).each { |i| %>
 <%= cluster_name %>-<%= i %>:
    architecture:
      nb_procs: 1 # Fake data, will be replaced by g5k-checks
      nb_cores: 72 # Fake data, will be replaced by g5k-checks
      nb_threads: 72 # Fake data, will be replaced by g5k-checks
      platform_type: x86_64 # Fake data, will be replaced by g5k-checks
      cpu_core_numbering: contiguous # Fake data, will be replaced by g5k-checks
    bios:
      release_date: 01/01/2000 # Fake date, will be replaced by g5k-checks
      vendor: Unknown # Fake vendor, will be replaced by g5k-checks
      version: 1 # Fake version, will be replaced by g5k-checks
    bmc_version: v1 # Fake version, will be replaced by g5k-checks
    chassis:
      manufacturer: Unknown # Fake manufacturer, will be replaced by g5k-checks
      name: Unknown # Fake name, will be replaced by g5k-checks
    main_memory:
      ram_size: 8 # Fake size, will be replaced by g5k-checks
    memory_devices:
      dimm:
        size: 8 # Fake size, will be replaced by g5k-checks
        technology: dram # Common memory technology, will be replaced by g5k-checks
    processor:
      model: Unknown # Fake model name, will be replaced by g5k-checks
      other_description: description # Fake description, will be replaced by g5k-checks
      vendor: vendor # Fake vendor, will be replaced by g5k-checks
      version: vendor # Fake version, will be replaced by g5k-checks
      cache_l1d: 8 # Fake cache, will be replaced by g5k-checks
      cache_l1i: 8 # Fake cache, will be replaced by g5k-checks
      cache_l2: 8 # Fake cache, will be replaced by g5k-checks
      cache_l3: 8 # Fake cache, will be replaced by g5k-checks
      instruction_set: x86-64 # Common instruction set, will be replaced by g5k-checks
      microcode: "0xd000001" # Fake microcode, will be replaced by g5k-checks
      ht_capable: true # Default ht capable value, will be replaced by g5k-checks 
    main_memory:
      ram_size: 8 # Fake ram size, will be replaced by g5k-checks
    memory_devices:
      dimm_proc 1 dimm 1: # Fake dimm name, will be replaced by g5k-checks
        size: 8 # Fake dimm size, will be replaced by g5k-checks
        technology: dram # Default dimm technology, will be replaced by g5k-checks
    operating_system:
      cstate_driver: unknown # Fake driver, will be replaced by g5k-checks
      cstate_governor: unknown # Fake governor, will be replaced by g5k-checks
      ht_enabled: true # common value for hyper threading, will be replaced by g5k-checks
      pstate_driver: unknwon # Fake driver, will be replaced by g5k-checks
      pstate_governor: unknown # Fake driver, will be replaced by g5k-checks
      turboboost_enabled: true # Default value for turboboost, will be replaced by g5k-checks 
    network_adapters:
      bmc:
        management: true
        mac: <%= mac_bmc_list[i - 1] %>
      eth0:
        interface: Ethernet
        management: false
        driver: mlx_core # Fake data, will be replaced by g5k-checks
        name: enp1s0f0np0 # Fake data, will be replaced by g5k-checks
        rate: 10000000000 # Fake data, will be replaced by g5k-checks
        mac: <%= mac_eth0_list[i - 1] %>
    storage_devices:
      disk0:
        storage: SSD # Fake data, will be replaced by g5k-checks
        model: unknown # Fake data, will be replaced by g5k-checks
        size: 8 # Fake data, will be replaced by g5k-checks
<% } %>
